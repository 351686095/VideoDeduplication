version: '2.3'

services:
  postgres:
    image: postgres
    environment:
      # Remember to change the config.yaml [conninfo] file if you change this
      POSTGRES_PASSWORD: "admin"
      POSTGRES_DB: "videodeduplicationdb"
      WINNOW_CONFIG: /config.yml
    ports:
      - "${BENETECH_PG_PORT:-5432}:5432"
    volumes:
      # Set the BENETECH_PG_DATA environment variable to the path on your host machine
      # where you would like to save your DB data
      - "${BENETECH_PG_DATA:-postgres-data}:/var/lib/postgresql/data"
    networks:
      - postgres-compose-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_SERVER_JSON_FILE: "/project/servers.json"
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks:
      - postgres-compose-network

  dedup-app:
    runtime: nvidia
    command: bash -ic "bash serve_jupyter.sh"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    volumes:
      # Set the BENETECH_DATA_LOCATION environment variable to the path
      # on your host machine where you placed the source data
      - "${BENETECH_DATA_LOCATION:?\n\nPlease set \"BENETECH_DATA_LOCATION\" environment variable to the root folder of your video files.}:/project/data"
    ports:
      - "8888:8888"
    depends_on:
      - postgres
    networks:
      - postgres-compose-network

  server:
    # This could be replaced by the online repository reference
    # if you don't want to built a local docker image
    build:
      context: .
      dockerfile: docker/Dockerfile.server
    environment:
      ENV SERVER_HOST: "0.0.0.0"
      ENV SERVER_PORT: "5000"
      ENV STATIC_FOLDER: "static"
      ENV DATABASE_HOST: "postgres"
      ENV DATABASE_PORT: "5432"
      ENV DATABASE_NAME: "videodeduplicationdb"
      ENV DATABASE_USER: "postgres"
      ENV DATABASE_PASS: "admin"
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - postgres-compose-network

networks:
  postgres-compose-network:

volumes:
  postgres-data:

