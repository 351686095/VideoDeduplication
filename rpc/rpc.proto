syntax = "proto3";

package rpc.proto;

// Semantic search service
service SemanticSearch {
  // Perform semantic search by text description
  rpc query_videos (TextSearchRequest) returns (TextSearchResults) {}
  rpc get_status (StatusRequest) returns (StatusResponse) {}
}

// Semantic text search request
message TextSearchRequest {
  string query = 1;
  float min_similarity = 2;
  int32 max_count = 3;
}

// Search results entry
message FoundVideo {
  uint64 id = 1;
  float score = 2;
}

// Result of the semantic text search
message TextSearchResults {
  repeated FoundVideo videos = 1;
  string original_query = 2;
  repeated string tokens = 3;
  repeated string clean_tokens = 4;
  string human_readable = 5;
  float score = 6;
}

// Service status request
message StatusRequest {
  // empty
}

// Service status response
message StatusResponse {
  bool status = 1;
}